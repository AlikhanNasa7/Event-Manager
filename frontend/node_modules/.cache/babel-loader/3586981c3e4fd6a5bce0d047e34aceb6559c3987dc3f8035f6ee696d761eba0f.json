{"ast":null,"code":"var _jsxFileName = \"/Users/nashtayalikhan/Downloads/01-starting-project 14/frontend/src/pages/Authentication.js\";\nimport AuthForm from '../components/AuthForm';\nimport { json } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n}\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport async function action({\n  request\n}) {\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get('mode') || 'login';\n  if (mode !== 'login' && mode !== 'signup') {\n    throw json({\n      message: 'Unsupported mode.'\n    }, {\n      status: 422\n    });\n  }\n  const data = await request.formData();\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password')\n  };\n  const response = await fetch('http://localhost:8080/' + mode, {\n    mode: 'POST',\n    header: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(authData)\n  });\n  if (response.status === 422 || response.status === 401) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: 'Could not '\n    });\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["AuthForm","json","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","searchParams","URL","url","mode","get","message","status","data","formData","authData","email","password","response","fetch","header","body","JSON","stringify","ok","$RefreshReg$"],"sources":["/Users/nashtayalikhan/Downloads/01-starting-project 14/frontend/src/pages/Authentication.js"],"sourcesContent":["import AuthForm from '../components/AuthForm';\nimport {json} from 'react-router-dom'\nfunction AuthenticationPage() {\n  return <AuthForm />;\n}\n\nexport default AuthenticationPage;\n\n\nexport async function action({request}){\n\n  const searchParams = new URL(request.url).searchParams\n\n  const mode = searchParams.get('mode') || 'login'\n\n  if (mode!=='login' && mode!=='signup'){\n    throw json({message: 'Unsupported mode.'}, {status:422});\n  }\n\n  const data = await request.formData();\n  const authData= {\n    email: data.get('email'),\n    password: data.get('password')\n  }\n\n  const response = await fetch('http://localhost:8080/' + mode, {\n    mode: 'POST',\n    header: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(authData)\n  });\n\n  if (response.status===422 || response.status===401){\n    return response;\n  }\n\n  if (!response.ok){\n    throw json({message: 'Could not '})\n  }\n}"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,wBAAwB;AAC7C,SAAQC,IAAI,QAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACrC,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,oBAAOD,OAAA,CAACH,QAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB;AAACC,EAAA,GAFQL,kBAAkB;AAI3B,eAAeA,kBAAkB;AAGjC,OAAO,eAAeM,MAAMA,CAAC;EAACC;AAAO,CAAC,EAAC;EAErC,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,CAACF,YAAY;EAEtD,MAAMG,IAAI,GAAGH,YAAY,CAACI,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO;EAEhD,IAAID,IAAI,KAAG,OAAO,IAAIA,IAAI,KAAG,QAAQ,EAAC;IACpC,MAAMd,IAAI,CAAC;MAACgB,OAAO,EAAE;IAAmB,CAAC,EAAE;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EAC1D;EAEA,MAAMC,IAAI,GAAG,MAAMR,OAAO,CAACS,QAAQ,CAAC,CAAC;EACrC,MAAMC,QAAQ,GAAE;IACdC,KAAK,EAAEH,IAAI,CAACH,GAAG,CAAC,OAAO,CAAC;IACxBO,QAAQ,EAAEJ,IAAI,CAACH,GAAG,CAAC,UAAU;EAC/B,CAAC;EAED,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,GAAGV,IAAI,EAAE;IAC5DA,IAAI,EAAE,MAAM;IACZW,MAAM,EAAE;MACN,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,QAAQ;EAC/B,CAAC,CAAC;EAEF,IAAIG,QAAQ,CAACN,MAAM,KAAG,GAAG,IAAIM,QAAQ,CAACN,MAAM,KAAG,GAAG,EAAC;IACjD,OAAOM,QAAQ;EACjB;EAEA,IAAI,CAACA,QAAQ,CAACM,EAAE,EAAC;IACf,MAAM7B,IAAI,CAAC;MAACgB,OAAO,EAAE;IAAY,CAAC,CAAC;EACrC;AACF;AAAC,IAAAR,EAAA;AAAAsB,YAAA,CAAAtB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}